import re


class baseModel_Rules:
    def __init__(self, modelPatterns):
        self.modelPatterns = dict(zip(self(), modelPatterns))
        merge = (f'({regex})' for (regex) in self.modelPatterns.items())
        self.pattern = re.compile('|'.join(merge))

    def search(self, targetModel):
        result = self.pattern.search(targetModel)
        if result is not None:
            for group, match in result.groupdict().items():
                if match:
                    text = self.modelPatterns[group]
                    return match, text

baseModel = baseModel_Rules()
modelPatterns = [("((Latitude|Optiplex|Precision) (\d{4}))"),
         ("((Precision).*(\d{4}))"),
         ("^Dell.*Enterprise$"),
         ("XPS \d{2} \d{4}")]

print(baseModel)