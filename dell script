import re
import uuid

class multiRegex:
    def __init__(self, rules):
        self.rules = dict(zip(self.groupName(), rules))
        merge = (f'(?P<{name}>{regex})' for name, (regex) in self.rules.items())
        self.pattern = re.compile('|'.join(merge))

    @staticmethod
    def groupName():    
        while True:
            yield f'g{uuid.uuid4()}'.replace('-', '')

    def search(self, targetModel):
        result = self.pattern.search(targetModel)
        if result is not None:
            for group, match in result.groupdict().items():
                if match:
                    text = self.rules[group]
                    return match, text

rules = [("^Latitude 7210$","2-in-1"),
         ("^Latitude 7320$","Detachable"),
         ("^Optiplex 3280$","AIO"),
         ("^Optiplex 7090$","Ultra"),
         ("^Precision 3420$","Compact")]

targetModel = ["DELL LATITUDE 7210 - 12.3"" - CORE I5 1135G7 - 8 GB RAM".title()]
multi = multiRegex(rules) 

for match in targetModel:
    match, text = multi.search(match)
    print(match)