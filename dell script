import re
import uuid

tests = ["DELL LATITDE 7210 - 12.3"" - CORE I5 1135G7 - 8 GB RAM".title()]

class MultiRegex:
    def __init__(self, rules):
        self.rules = dict(zip(self._gen_group_names(), rules))
        merge = (f'(?P<{name}>{regex})' for name, (regex, _) in self.rules.items())
        self.pattern = re.compile('|'.join(merge))

    @staticmethod
    def _gen_group_names():      
        while True:
            yield f'g{uuid.uuid4()}'.replace('-', '')

    def search(self, string):
        result = self.pattern.search(string)
        if result is not None:
            for group, match in result.groupdict().items():
                if match:
                    _, text = self.rules[group]
                    return match, text

rules = [("7210$", "2-in-1"),
         ("7320$", "Detachable"),
         ("3280$", "AIO"),
         ("7090$", "Ultra"),
         ("3420$", "Compact")
         ]

multi = MultiRegex(rules) 
print(multi)

#for test in tests:
    #match, text = multi.search(test)
    #print(f'{match} {text}')